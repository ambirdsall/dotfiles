#+TITLE: dotfiles
These are my linux/macOS configuration files. They're tracked in a git repository separate from the
working tree, which is just my home directory; this replaces an ongoing symlink song and dance for a
little upfront setup effort. Given that the upfront work can be copy-pasted, it's a pretty great
tradeoff.
* to install on a new computer
To get up and running:
1) clone the dotfiles repo
2) copy the files over to their proper locations, and
3) configure the dotfile git repo to ignore all untracked files

The last step is so neither I nor you ever accidentally push our whole home directory to
github, lol. So:
#+BEGIN_SRC sh
git clone --separate-git-dir=$HOME/.dots git@github.com:ambirdsall/dots.git tmpdotfiles
rsync --recursive \
      --verbose \
      --exclude '.git' \
      --backup --suffix=.dots.orig \
      tmpdotfiles/ $HOME/
rm -r tmpdotfiles

git --git-dir=$HOME/.dots/ --work-tree=$HOME config --local status.showUntrackedFiles no
#+END_SRC

If you've already installed emacs, you can now run
#+BEGIN_SRC sh
make install
#+END_SRC

followed by whichever of the following is appropriate
#+begin_src shell
make linux
make macos
#+end_src

* managing this git directory
The =~/bin/dots= file provides a =dots= command to handle all interaction with the git repo. It wraps
~git~, passing the correct directories to ~--git-dir~ and ~--work-tree~ and paving a few common paths:
- ~dots~ :: defaults to ~git status -s~ when called with no arguments
- ~dots c some commit message~ :: expands to ~dots commit -m "some commit message"~

* todo list
** TODO install roboto mono in all OSes (for experimenting with NANO emacs)
** TODO organize a system for task to find and build all literate configs [0/4]
*** TODO consistent filename convention lmao
*** TODO ~dots build~ or ~dots build all~ :: tangle all literate configs
Does this need to be a specific command? If ~dots ls-files | grep ${filename}.org |
$tangle_cmd~  is snappy enough to run for everything, and at least for now, I'm fine with
untracked files needing to be more manually tangled.
*** TODO ~dots build <directory-or-file>~ :: tangle a specific config
*** TODO ~dots build --watch~ / ~-w~ :: tangle a specific config every time the file changes
